name: Release to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js v16.14.0
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
          cache-dependency-path: yarn.lock
      - name: Install project deps
        run: |
          yarn set version berry
          yarn install --immutable

      - name: Cache NextJS
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('yarn.lock') }}-

      - name: Build NextJS
        run: |
          NEXT_BASE_PATH=/$(basename ${{ github.repository }}) yarn build
        env:
          NEXT_TELEMETRY_DISABLED: 1

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - uses: actions/cache@v3
        id: cache-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

  lint:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}
      - run: yarn lint

  testUnit:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}
      - name: Unit testing & check code coverage
        run: |
          yarn coverage
          echo "repo-token: $COVERALLS_REPO_TOKEN" > ${{ github.workspace }}/coveralls.yml
          cat coverage/lcov.info | yarn coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  testE2E:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}
      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: cache-playwright-${{ runner.os }}
      - name: Install playwright deps
        run: yarn playwright install-deps
        if: always()
      - name: e2e Testing
        run: yarn test:e2e
      - name: Upload e2e test videos
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: ${{ github.workspace }}/test-results/**/*

  publishRelease:
    runs-on: ubuntu-latest
    needs: [build, lint, testUnit, testE2E]
    steps:
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}
      - name: Release to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ${{ github.workspace }}/out
