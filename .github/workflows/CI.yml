name: CI

on: [push, pull_request]

jobs:
  CI:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js v16.14.0
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
      - name: Install Deps
        run: |
          yarn set version berry
          yarn install --immutable --immutable-cache
      - uses: actions/cache@v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Build
          yarn next telemetry disable
          yarn build
      - name: Unit Testing & Coverage
        run: yarn coverage
      - name: Install Playwright
        run: yarn dlx playwright install --with-deps
      - name: e2e Testing
        run: yarn test:e2e
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: test-results
      - name: Release to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          enable_jekyll: false
